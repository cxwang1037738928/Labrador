generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql" // modify depending on the database we're connecting to
  url      = env("DATABASE_URL")
}


model User {
  id    Int   @id@default(autoincrement())
  name    String    
  email   String    @unique
  role    String?   // role of the user, one of 'user', 'cashier', 'manager', 'admin'
  points    Int   @default(0)
  password    String
  suspicious    Boolean   @default(false)   // flags a user as suspicious, which cashiers and managers can view
  isActive  Boolean  @default(false) // 
  activationToken String? // 
  resetToken String? // 
  resetTokenExpiry DateTime? // 
  createdAt   DateTime    @default(now())
  lastlogin   DateTime? 
  profile   Profile? // every user has a profile with a picture and bio, as well as a display of all their organizations and points
  organizations    Organization[]?    @relation("UserOrganization")
  ledOrganization   Organization[]?   @relation("OrganizationLeader")
}

model Profile{
  id    Int   @id@default(autoincrement())
  bio   String
  userId    Int   @unique
  image   String // file path to image in firebase, the profile picture
  user    User    @relation(fields: [userId], references: [id])
}

model Organization {
  id    Int   @id@default(autoincrement())
  name    String
  description   String? // Optional description of the organization
  leaderId    Int
  leader    User[]    @relation("OrganizationLeader", fields[leaderId], references: [id])
  members    User[]   @relation("UserOrganization") // users part of the organization 
}

// TODO: Schemas for annotated images and videos
